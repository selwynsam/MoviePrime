{"version":3,"sources":["axiosConfig.js","common/SearchBar/SearchAPI.js","utility.js","common/SearchBar/index.js","common/SearchBar/SearchBar.js","common/Header/index.js","common/Header/Header.js","home/HomeAPI.js","common/Carousel/Carousel.js","common/Carousel/index.js","common/MovieCard/index.js","common/MovieCard/MovieCard.js","common/InfiniteScroll.js","AppProvider.js","home/Home.js","home/index.js","common/VideoModal.js","movieInfo/MovieInfoApI.js","movieInfo/MovieInfo.js","movieInfo/index.js","App.js","reportWebVitals.js","index.js"],"names":["axiosInstance","axios","create","baseURL","process","interceptors","request","use","config","params","headers","Authorization","searchMovie","a","get","data","results","console","error","getImagePath","key","type","IMAGE_BASE_URL","formatGenres","genres","map","item","name","join","normalize","normalizedData","getGenreList","ids","id","SearchBar","props","useState","inputFocus","setInputFocus","suggestions","setSuggestions","isLoading","setIsLoading","onChangeHandler","event","value","target","query","splicedResults","slice","debouncedChangeHandler","useCallback","debounce","className","InputBase","placeholder","endAdornment","CircularProgress","size","color","onFocus","onBlur","onChange","suggestionItem","to","src","poster_path","alt","title","Header","navigate","useNavigate","headerRef","useRef","sticky","setSticky","useEffect","initalizeScrollObserver","current","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","isVisible","root","threshold","rootMargin","observe","getLogo","onClick","ref","getGenres","log","getUpcomingMovies","getMoviesList","settings","accessibility","autoplay","autoplaySpeed","infinite","speed","slidesToShow","slidesToScroll","draggable","fade","centerMode","centerPadding","arrows","Carousel","list","listItem","backdrop_path","original_title","MovieCard","movieId","imagePath","rating","InfiniteScroll","triggerScrollHandler","scrollHandler","rootElement","React","createRef","lastRef","this","children","Component","AppContext","createContext","AppProvider","setGenres","response","normalizedGenres","Provider","selectStyles","control","provided","state","background","borderColor","borderRadius","indicatorSeparator","display","input","styles","menu","singleValue","option","isFocused","fontWeight","border","OPTIONS","label","DEFAULT_LIST_PARAMS","page","sort_by","include_adult","include_video","Home","useContext","upcomingMovies","setUpcomingMovies","moviesList","setMoviesList","movieListParams","setMovieListParams","totalPages","setTotalPages","init","fetchUpcomingMovies","fetchMoviesList","total_pages","loadMoreHandler","nextPage","options","Grid","container","movieItem","xs","md","genre_ids","vote_average","VideoModal","srcKey","handleClose","Modal","open","onClose","width","height","frameborder","allowFullScreen","getMovieDetails","getSimilarMovies","MOVIE_QUERY_PARAMS","append_to_response","MovieInfo","useParams","movieDetails","setMovieDetails","videoSrcKey","setVideoSrcKey","showTrailer","setShowTrailer","similarMovies","setSimilarMovies","fetchMovieDetails","fetchSimilarMovies","window","scrollTo","top","left","behavior","videos","originalTitle","releaseDate","release_date","runtime","overview","cast","casts","credits","backdropPath","videoDetails","find","site","moment","format","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efcec39e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nlet axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n});\r\n\r\naxiosInstance.interceptors.request.use(config =>{\r\n    config.params = config.params || {};\r\n    config.headers.Authorization = `Bearer ${process.env.REACT_APP_API_AUTH_TOKEN}`;\r\n    return config;\r\n});\r\n\r\nexport default axiosInstance;","import axios from '../../axiosConfig';\r\n\r\nexport async function searchMovie(params) {\r\n    try {\r\n        const { data } = await axios.get(`/search/movie`, { params });\r\n        return data.results;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}","export function getImagePath(key, type=\"original\") {\r\n    const IMAGE_BASE_URL = process.env.REACT_APP_IMAGE_BAST_URL;\r\n    return `${IMAGE_BASE_URL}/${type}/${key}`;\r\n}\r\n\r\nexport function formatGenres(genres) {\r\n    return genres.map(item => item.name).join(', ');\r\n}\r\n\r\nexport function formatCasts(casts) {\r\n    let castList = casts.slice(0, 3);\r\n    return castList.map(item => item.name).join(', ');\r\n}\r\n\r\nexport function normalize(data, key) {\r\n    const normalizedData = {};\r\n    for(const item of data){\r\n        normalizedData[item[key]] = { ...item }\r\n    }\r\n    return normalizedData\r\n}\r\n\r\nexport function getGenreList(ids, genres) {\r\n    return ids.map(id =>genres?.[id]?.name).join(', ');\r\n}","import SearchBar from './SearchBar';\r\nexport default SearchBar;","import { useState, useCallback } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport debounce from 'lodash.debounce';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { searchMovie } from \"./SearchAPI\";\r\nimport { getImagePath } from \"../../utility\";\r\n\r\nconst SearchBar = props =>{\r\n\r\n    const [inputFocus, setInputFocus] = useState(false);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const onChangeHandler = async event =>{\r\n        setIsLoading(true);\r\n        const value = event.target.value;\r\n\r\n        if(!value){ \r\n            setSuggestions([]);\r\n            setInputFocus(false);\r\n            return\r\n        };\r\n\r\n        const params = { query: value };\r\n        const results = await searchMovie(params);\r\n        const splicedResults = results.slice(0, 4);\r\n        setSuggestions([ ...splicedResults ]);\r\n        setInputFocus(true);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const debouncedChangeHandler = useCallback(\r\n        debounce(onChangeHandler, 300)\r\n    , []);\r\n\r\n    const onFocusHandler = event =>{\r\n        const value = event.target.value;\r\n        if(value) setInputFocus(true)\r\n    }\r\n\r\n    const onBlurHandler = event =>{\r\n        setInputFocus(false)\r\n    } \r\n    \r\n    return (\r\n        <div className=\"search-bar\">\r\n            <InputBase \r\n                className=\"search-input\"\r\n                placeholder=\"Search for Movies......\"\r\n                endAdornment={\r\n                    <div className=\"d-flex\">\r\n                        {inputFocus && isLoading ? \r\n                            <CircularProgress size={20} color=\"inherit\"/> :\r\n                            <SearchIcon/>\r\n                        }\r\n                    </div>}\r\n                onFocus={onFocusHandler}\r\n                onBlur={onBlurHandler}\r\n                onChange={debouncedChangeHandler}\r\n            />\r\n            <div className={`results ${inputFocus ? 'active' : ''}`}>\r\n                {suggestions.map(suggestionItem =>(\r\n                    <ul key={`suggestion_${suggestionItem.id}`}>\r\n                        <li>\r\n                            <Link to={`/movie/${suggestionItem.id}`} className=\"search-option\">\r\n                                <img \r\n                                    src={getImagePath(suggestionItem.poster_path, 'w500')}\r\n                                    alt={suggestionItem.title}\r\n                                />\r\n                                <span>{suggestionItem.title}</span>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import Header from './Header';\r\nexport default Header;","import { useNavigate } from 'react-router';\r\nimport SearchBar from '../SearchBar';\r\nimport { useRef, useState, useEffect } from 'react';\r\n\r\nconst Header = props =>{\r\n    const navigate = useNavigate();\r\n    const headerRef = useRef(null);\r\n    const [sticky, setSticky] = useState(false);\r\n\r\n    useEffect(() =>{\r\n        initalizeScrollObserver();\r\n    }, []);\r\n\r\n    const initalizeScrollObserver = () =>{\r\n\r\n        if (!headerRef.current) return;\r\n\r\n        let options = {\r\n            root: null, //observing element\r\n            threshold: 0, //when to trigger\r\n            rootMargin: \"0px\" // margin for the observer\r\n        }\r\n\r\n        let observer = new IntersectionObserver((entries, observer) => {\r\n            entries.forEach(entry => {\r\n                if (!entry.isIntersecting && !entry.isVisible) {\r\n                    setSticky(true)\r\n                }\r\n\r\n                if (entry.isIntersecting) {\r\n                    setSticky(false);\r\n                }\r\n            });\r\n        }, options);\r\n\r\n        observer.observe(headerRef.current);\r\n    }\r\n\r\n    const getLogo = () =>{\r\n        return (\r\n            <div \r\n                className=\"header-logo\" \r\n                onClick={() => navigate('/')}\r\n            >\r\n                MoviePrime\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <header className=\"header-container\">\r\n            <div className=\"container header\" ref={headerRef}>\r\n                {getLogo()}\r\n            </div> \r\n\r\n            <div id=\"sticky-header\" className={sticky ? 'sticky' : ''}>\r\n                <div className={`container header`}>\r\n                    {getLogo()}\r\n                    \r\n                    <div className=\"header-search-bar\">\r\n                        <SearchBar />\r\n                    </div>\r\n                    \r\n                    <div className=\"spacer\"/>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from '../axiosConfig';\r\n\r\nexport async function getGenres() {\r\n    try {\r\n        const { data } = await axios.get(`/genre/movie/list`);\r\n        return data.genres;\r\n    } catch (error) {\r\n        console.log('error==', error);\r\n    }\r\n}\r\n\r\nexport async function getUpcomingMovies() {\r\n    try {\r\n        const { data } = await axios.get(`/movie/now_playing`);\r\n        return data.results;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport async function getMoviesList(params = {}) {\r\n    try {\r\n        const { data } = await axios.get(`/discover/movie`, { params });\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n","import \"./Carousel.scss\";\r\nimport Slider from \"react-slick\";\r\nimport { getImagePath } from \"../../utility\";\r\n\r\nconst settings = {\r\n    accessibility: false,\r\n    autoplay: true,\r\n    autoplaySpeed: 5000,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    draggable: false,\r\n    fade: true,\r\n    centerMode: true,\r\n    centerPadding: '0px',\r\n    arrows: false\r\n};\r\n\r\nconst Carousel = props =>{\r\n    const { list } = props;\r\n    return (\r\n        <Slider {...settings}>\r\n            {list.map(listItem =>(\r\n                <img \r\n                    key={`upcoming_${listItem.id}`}\r\n                    src={getImagePath(listItem.backdrop_path)} \r\n                    alt={listItem.original_title} \r\n                />\r\n            ))}\r\n        </Slider>\r\n    )\r\n}\r\n\r\nexport default Carousel;","import Carousel from \"./Carousel\";\r\nexport default Carousel;","import MovieCard from \"./MovieCard\";\r\nexport default MovieCard;","import { Link } from 'react-router-dom';\r\nimport StarRoundedIcon from '@mui/icons-material/StarRounded';\r\nimport { getImagePath } from '../../utility';\r\n\r\nconst MovieCard = props =>{\r\n    const { movieId, title, genres, imagePath, rating } = props;\r\n    return(\r\n        <div className=\"movie-card\">\r\n            <div className=\"rating\">\r\n                <StarRoundedIcon className=\"icon\" /> {rating}\r\n            </div>\r\n            <Link to={`/movie/${movieId}`} className=\"link\">\r\n                <img\r\n                    src={getImagePath(imagePath, 'w500')}\r\n                    alt={title}\r\n                />\r\n\r\n                <div className=\"info\">\r\n                    <h4>{title}</h4>\r\n                    <div>{genres}</div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import 'intersection-observer';\r\n\r\nclass InfiniteScroll extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.rootElement = React.createRef();\r\n        this.lastRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initalizeScrollObserver();\r\n    }\r\n\r\n    triggerScrollHandler = () =>{\r\n        this.props.scrollHandler();\r\n    }\r\n\r\n    initalizeScrollObserver() {\r\n        const { scrollHandler, isLoading } = this.props;\r\n        if (!this.lastRef.current || !scrollHandler) return;\r\n\r\n        let options = {\r\n            root: null, //observing element\r\n            threshold: 1, //when to trigger\r\n            rootMargin: \"0px\" // margin for the observer\r\n        }\r\n\r\n        let observer = new IntersectionObserver((entries, observer) => {\r\n            entries.forEach(entry => {\r\n                if (!isLoading && entry.isIntersecting) {\r\n                    this.triggerScrollHandler();\r\n                }\r\n            });\r\n        }, options);\r\n\r\n        observer.observe(this.lastRef.current);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.rootElement} className=\"infinite-holder\">\r\n                {this.props.children}\r\n                <div ref={this.lastRef}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInfiniteScroll.propTypes = {\r\n    scrollHandler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default InfiniteScroll;","import { createContext, useEffect, useState } from 'react';\r\nimport { getGenres } from './home/HomeAPI';\r\nimport { normalize } from './utility';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) =>{\r\n    const [genres, setGenres] = useState({});\r\n\r\n    useEffect(async() =>{\r\n        const response = await getGenres();\r\n        const normalizedGenres = normalize(response, 'id');\r\n        setGenres({ ...normalizedGenres });\r\n    }, []);\r\n\r\n    return (\r\n        <AppContext.Provider value={{ genres }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Select from 'react-select';\r\n\r\nimport { getUpcomingMovies, getMoviesList, getGenres } from './HomeAPI';\r\nimport Carousel from '../common/Carousel';\r\nimport MovieCard from '../common/MovieCard';\r\nimport SearchBar from '../common/SearchBar';\r\nimport InfiniteScroll from '../common/InfiniteScroll';\r\nimport { getGenreList } from '../utility';\r\nimport { AppContext } from '../AppProvider';\r\n\r\nconst selectStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: '#020d18',\r\n        borderColor: '#ffffff78',\r\n        borderRadius: '20px'\r\n    }),\r\n    indicatorSeparator: (provided, state) => ({\r\n        ...provided,\r\n        display: 'none'\r\n    }),\r\n    input: (styles) => ({ ...styles,  color: '#fff', }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        background: '#ffffffc9',\r\n    }),\r\n    singleValue: (provided, state) => ({\r\n        ...provided,\r\n        color: '#fff',\r\n    }),\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        color: state.isFocused ? '#fff' : '#000',\r\n        background: state.isFocused ? '#020d18' : '#ffffffc9',\r\n        fontWeight: 600,\r\n        border: '1px solid #020d1845'\r\n    })\r\n}\r\n\r\nconst SORT_BY = {\r\n    rating: 'vote_average.desc',\r\n    date: 'release_date.desc',\r\n    title: 'original_title.desc',\r\n    popularity: 'popularity.desc'\r\n}\r\n\r\nconst OPTIONS = [\r\n    { label: 'Sort by Rating', value: SORT_BY.rating},\r\n    { label: 'Sort by Date', value: SORT_BY.date },\r\n    { label: 'Sort by Title', value: SORT_BY.title },\r\n];\r\n\r\nconst DEFAULT_LIST_PARAMS = {\r\n    page: 1,\r\n    sort_by: SORT_BY.popularity,\r\n    include_adult: false,\r\n    include_video: true\r\n}\r\n\r\nconst Home = props =>{\r\n    const { genres } = useContext(AppContext);\r\n    const [upcomingMovies, setUpcomingMovies] = useState([]);\r\n    const [moviesList, setMoviesList] = useState([]);\r\n    const [movieListParams, setMovieListParams] = useState({ ...DEFAULT_LIST_PARAMS });\r\n    const [totalPages, setTotalPages] = useState(500);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() =>{\r\n        init()\r\n    }, []);\r\n\r\n    const fetchUpcomingMovies = async() =>{\r\n        const data = await getUpcomingMovies();\r\n        setUpcomingMovies(data);\r\n    }\r\n\r\n    const init = async() =>{\r\n        fetchUpcomingMovies();\r\n        const results = await fetchMoviesList(movieListParams);\r\n        setMoviesList([ ...results]);\r\n    }\r\n\r\n    const fetchMoviesList = async(params) =>{\r\n        if(isLoading) return;\r\n        setIsLoading(true);\r\n        const response = await getMoviesList(params);\r\n        setMovieListParams({ ...movieListParams,  page: response.page });\r\n        setTotalPages(response.total_pages);\r\n        setIsLoading(false);\r\n        return response.results;\r\n    }\r\n\r\n    const loadMoreHandler = async() =>{\r\n        const nextPage = movieListParams.page + 1;\r\n        if(nextPage <= totalPages){\r\n            const params = { \r\n                ...movieListParams,\r\n                page: nextPage\r\n            }\r\n            const results = await fetchMoviesList(params);\r\n            if(results) setMoviesList([ ...moviesList, ...results]);\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = async data =>{\r\n        const params = {\r\n            ...movieListParams,\r\n            sort_by: data.value,\r\n            page: DEFAULT_LIST_PARAMS.page\r\n        }\r\n        const results = await fetchMoviesList(params);\r\n        setMoviesList(results);\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <main>\r\n\r\n            <div className=\"slider-container\">\r\n                <Carousel list={upcomingMovies}/>\r\n                <div className=\"search-container\">\r\n                    <SearchBar />\r\n                </div>\r\n                <div className=\"overlay\"/>\r\n            </div>\r\n   \r\n            <section className=\"movie-list\">\r\n                <div className=\"container\">\r\n                    <div className=\"sortby-container\">\r\n                        <Select \r\n                            placeholder=\"Sort by\"\r\n                            styles={selectStyles}\r\n                            options={OPTIONS}\r\n                            onChange={onChangeHandler}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <InfiniteScroll scrollHandler={loadMoreHandler} isLoading={isLoading} movieListParams={movieListParams}>\r\n                        <Grid container>\r\n                            {moviesList.map(movieItem =>(\r\n                                <Grid item xs={6} md={3} key={`movie_${movieItem.id}`}>\r\n                                    <MovieCard\r\n                                        movieId={movieItem.id}\r\n                                        title={movieItem.title}\r\n                                        genres={getGenreList(movieItem.genre_ids, genres)}\r\n                                        imagePath={movieItem.poster_path}\r\n                                        rating={movieItem.vote_average}\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </InfiniteScroll>\r\n                </div>\r\n            </section>\r\n   \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Home;","import Home from \"./Home\";\r\nexport default Home;","import Modal from '@mui/material/Modal';\r\n\r\nconst VideoModal = props =>{\r\n    const { srcKey, handleClose } = props;\r\n    return (\r\n        <Modal\r\n            open={true}\r\n            onClose={handleClose}\r\n        >\r\n            <div className=\"iframe-container\">\r\n                <iframe \r\n                    width=\"100%\" \r\n                    height=\"345\" \r\n                    src={`https://www.youtube.com/embed/${srcKey}?rel=0&autoplay=1`} \r\n                    frameborder=\"0\" \r\n                    allowFullScreen \r\n                />\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default VideoModal;","import axios from '../axiosConfig';\r\n\r\nexport async function getMovieDetails(movieId, params) {\r\n    try {\r\n        const { data } = await axios.get(`/movie/${movieId}`, { params });\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport async function getSimilarMovies(movieId){\r\n    try {\r\n        const { data } = await axios.get(`/movie/${movieId}/similar`);\r\n        return data.results;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport PlayCircleOutlineRoundedIcon from '@mui/icons-material/PlayCircleOutlineRounded';\r\nimport Grid from '@mui/material/Grid';\r\nimport moment from 'moment';\r\n\r\nimport MovieCard from '../common/MovieCard';\r\nimport VideoModal from '../common/VideoModal';\r\nimport { getMovieDetails, getSimilarMovies } from './MovieInfoApI';\r\nimport { formatGenres, formatCasts, getImagePath, getGenreList } from '../utility';\r\nimport { AppContext } from '../AppProvider';\r\n\r\nconst MOVIE_QUERY_PARAMS = { append_to_response: 'videos,credits' };\r\n\r\nconst MovieInfo = props =>{\r\n    const { movieId } = useParams();\r\n    const navigate = useNavigate();\r\n    const { genres } = useContext(AppContext);\r\n    const [movieDetails, setMovieDetails] = useState({});\r\n    const [videoSrcKey, setVideoSrcKey] = useState(null);\r\n    const [showTrailer, setShowTrailer] = useState(false);\r\n    const [similarMovies, setSimilarMovies] = useState([]);\r\n\r\n    useEffect(() =>{\r\n\r\n        if(!movieId){\r\n            navigate('/');\r\n            return;\r\n        }\r\n        \r\n        fetchMovieDetails();\r\n        fetchSimilarMovies();\r\n\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        });\r\n\r\n    }, [movieId]);\r\n\r\n    const fetchMovieDetails = async() =>{\r\n        \r\n        const { videos, ...results } = await getMovieDetails(movieId, MOVIE_QUERY_PARAMS);\r\n        setMovieDetails({ \r\n            originalTitle: results.original_title,\r\n            releaseDate: results.release_date,\r\n            runtime: results.runtime,\r\n            overview: results.overview,\r\n            genres: formatGenres(results.genres),\r\n            cast: formatCasts(results.credits.cast),\r\n            backdropPath: results.backdrop_path\r\n        });\r\n        const videoDetails = videos.results.find(item => item.key && item.site == 'YouTube');\r\n        if(videoDetails) setVideoSrcKey(videoDetails.key)\r\n    }\r\n\r\n    const fetchSimilarMovies = async() =>{\r\n        const results = await getSimilarMovies(movieId);\r\n        setSimilarMovies([...results]);\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"movie-banner\">\r\n                <div className=\"image-container\">\r\n                    <img \r\n                        src={getImagePath(movieDetails.backdropPath)}\r\n                        alt=\"Dune\"\r\n                    />\r\n                </div>\r\n                <div className=\"overlay\">\r\n                    <PlayCircleOutlineRoundedIcon \r\n                        className=\"play-icon\" \r\n                        onClick={() =>setShowTrailer(true)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <section className=\"movie-info\">\r\n                <div className=\"container\">\r\n                    <h1>{movieDetails.originalTitle}</h1>\r\n                    <div className=\"meta-info\">\r\n                        <span className=\"info-item\">{moment(movieDetails.releaseDate).format('YYYY')}</span>\r\n                        <span className=\"info-spacer\">|</span>\r\n                        <span className=\"info-item\">{moment(movieDetails.runtime).format('h[h] m[m]')}</span>\r\n                        <span className=\"info-spacer\">|</span>\r\n                        <span className=\"info-item\">{movieDetails.genres}</span>\r\n                    </div>\r\n                    <div className=\"movie-synopsis\">\r\n                        {movieDetails.overview}\r\n                    </div>\r\n                    <div className=\"movie-cast-info\">\r\n                        <span className=\"label\">Starring:</span>\r\n                        <span className=\"star-cast\">{movieDetails.cast}</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"similar-movies\">\r\n                <div className=\"container\">\r\n                    <h3 className=\"label\">More like this</h3>\r\n                    <Grid container>\r\n                        {similarMovies.map(movieItem =>(\r\n                            <Grid item xs={6} md={3} key={`movie_${movieItem.id}`}>\r\n                                <MovieCard\r\n                                    movieId={movieItem.id}\r\n                                    title={movieItem.title}\r\n                                    genres={getGenreList(movieItem.genre_ids, genres)}\r\n                                    imagePath={movieItem.poster_path}\r\n                                    rating={movieItem.vote_average}\r\n                                />\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </div>\r\n            </section>\r\n\r\n            {showTrailer && videoSrcKey && (\r\n                <VideoModal \r\n                    srcKey={videoSrcKey} \r\n                    handleClose={() =>setShowTrailer(false)}\r\n                />\r\n            )}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;","import MovieInfo from './MovieInfo';\r\nexport default MovieInfo;","\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Header from './common/Header';\nimport Home from './home';\nimport MovieInfo from './movieInfo';\nimport { AppProvider } from './AppProvider';\nimport './styles/style.scss';\n\nfunction App() {\n  return (\n    <AppProvider>\n      <BrowserRouter>\n\n        <Header/>\n\n        <Routes>\n          <Route path=\"/\" element={<Home/>} />\n          <Route path=\"/movie/:movieId\" element={<MovieInfo />} />\n        </Routes>\n\n      </BrowserRouter>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}